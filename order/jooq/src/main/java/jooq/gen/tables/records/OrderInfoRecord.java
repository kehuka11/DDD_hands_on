/*
 * This file is generated by jOOQ.
 */
package jooq.gen.tables.records;


import java.time.LocalDateTime;

import jooq.gen.tables.OrderInfo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderInfoRecord extends UpdatableRecordImpl<OrderInfoRecord> implements Record6<String, LocalDateTime, String, Long, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>order.order_info.order_id</code>.
     */
    public void setOrderId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>order.order_info.order_id</code>.
     */
    public String getOrderId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>order.order_info.order_date_time</code>.
     */
    public void setOrderDateTime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>order.order_info.order_date_time</code>.
     */
    public LocalDateTime getOrderDateTime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>order.order_info.status</code>.
     */
    public void setStatus(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>order.order_info.status</code>.
     */
    public String getStatus() {
        return (String) get(2);
    }

    /**
     * Setter for <code>order.order_info.total_amount</code>.
     */
    public void setTotalAmount(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>order.order_info.total_amount</code>.
     */
    public Long getTotalAmount() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>order.order_info.updated_time</code>.
     */
    public void setUpdatedTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>order.order_info.updated_time</code>.
     */
    public LocalDateTime getUpdatedTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>order.order_info.created_time</code>.
     */
    public void setCreatedTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>order.order_info.created_time</code>.
     */
    public LocalDateTime getCreatedTime() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, LocalDateTime, String, Long, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, LocalDateTime, String, Long, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return OrderInfo.ORDER_INFO.ORDER_ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return OrderInfo.ORDER_INFO.ORDER_DATE_TIME;
    }

    @Override
    public Field<String> field3() {
        return OrderInfo.ORDER_INFO.STATUS;
    }

    @Override
    public Field<Long> field4() {
        return OrderInfo.ORDER_INFO.TOTAL_AMOUNT;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return OrderInfo.ORDER_INFO.UPDATED_TIME;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return OrderInfo.ORDER_INFO.CREATED_TIME;
    }

    @Override
    public String component1() {
        return getOrderId();
    }

    @Override
    public LocalDateTime component2() {
        return getOrderDateTime();
    }

    @Override
    public String component3() {
        return getStatus();
    }

    @Override
    public Long component4() {
        return getTotalAmount();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdatedTime();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedTime();
    }

    @Override
    public String value1() {
        return getOrderId();
    }

    @Override
    public LocalDateTime value2() {
        return getOrderDateTime();
    }

    @Override
    public String value3() {
        return getStatus();
    }

    @Override
    public Long value4() {
        return getTotalAmount();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdatedTime();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedTime();
    }

    @Override
    public OrderInfoRecord value1(String value) {
        setOrderId(value);
        return this;
    }

    @Override
    public OrderInfoRecord value2(LocalDateTime value) {
        setOrderDateTime(value);
        return this;
    }

    @Override
    public OrderInfoRecord value3(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public OrderInfoRecord value4(Long value) {
        setTotalAmount(value);
        return this;
    }

    @Override
    public OrderInfoRecord value5(LocalDateTime value) {
        setUpdatedTime(value);
        return this;
    }

    @Override
    public OrderInfoRecord value6(LocalDateTime value) {
        setCreatedTime(value);
        return this;
    }

    @Override
    public OrderInfoRecord values(String value1, LocalDateTime value2, String value3, Long value4, LocalDateTime value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderInfoRecord
     */
    public OrderInfoRecord() {
        super(OrderInfo.ORDER_INFO);
    }

    /**
     * Create a detached, initialised OrderInfoRecord
     */
    public OrderInfoRecord(String orderId, LocalDateTime orderDateTime, String status, Long totalAmount, LocalDateTime updatedTime, LocalDateTime createdTime) {
        super(OrderInfo.ORDER_INFO);

        setOrderId(orderId);
        setOrderDateTime(orderDateTime);
        setStatus(status);
        setTotalAmount(totalAmount);
        setUpdatedTime(updatedTime);
        setCreatedTime(createdTime);
    }
}
